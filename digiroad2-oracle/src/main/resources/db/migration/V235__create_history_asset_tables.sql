--COPY ASSET TABLE
CREATE TABLE ASSET_HISTORY (
   	ID NUMBER PRIMARY KEY,
   	OLD_ID NUMBER NOT NULL,
	EXTERNAL_ID NUMBER,
	ASSET_TYPE_ID NUMBER REFERENCES ASSET_TYPE (ID) ENABLE,
	CREATED_DATE TIMESTAMP (6) DEFAULT current_timestamp NOT NULL ENABLE,
	CREATED_BY VARCHAR2(128),
	MODIFIED_DATE TIMESTAMP (6),
	MODIFIED_BY VARCHAR2(128),
	BEARING NUMBER,
	VALID_FROM TIMESTAMP (6),
	VALID_TO TIMESTAMP (6),
	GEOMETRY SDO_GEOMETRY,
	MUNICIPALITY_CODE NUMBER,
	FLOATING CHAR(1) DEFAULT '0',
	AREA NUMBER(*,0),
	VERIFIED_BY VARCHAR2(128),
	VERIFIED_DATE TIMESTAMP (6),
	INFORMATION_SOURCE NUMBER(*,0),
    CONSTRAINT HIST_VALIDITY_PERIOD CHECK (VALID_FROM <= VALID_TO) ENABLE,
	CONSTRAINT HIST_CONS_FLOATING_IS_BOOLEAN CHECK (FLOATING in ('1','0')) ENABLE,
	CONSTRAINT HIST_CHK_MASS_TRANSITS_MUN CHECK ((ASSET_TYPE_ID = 10 and MUNICIPALITY_CODE is not null) or (ASSET_TYPE_ID <> 10)) ENABLE NOVALIDATE,
	CONSTRAINT HIST_INFORMATION_SOURCE CHECK (INFORMATION_SOURCE in (1,2,3)) ENABLE
);

CREATE INDEX HIST_ASSET_FLOATING_IDX ON ASSET_HISTORY (FLOATING);
-- TODO: Check why this does not work when copying rows from asset table
-- CREATE INDEX HIST_ASSET_GEOMETRY_SX ON ASSET_HISTORY (GEOMETRY) INDEXTYPE IS MDSYS.SPATIAL_INDEX;
CREATE INDEX HIST_A_TYPE_AND_MODI_BY_IDX ON ASSET_HISTORY (ASSET_TYPE_ID, MODIFIED_BY);
CREATE INDEX HIST_ASSET_TYPE_IDX ON ASSET_HISTORY (ASSET_TYPE_ID);
CREATE UNIQUE INDEX HIST_EXTERNAL_ID_INDEX ON ASSET_HISTORY (EXTERNAL_ID);
CREATE INDEX HIST_MUNICIPALITY_CODE_IDX ON ASSET_HISTORY (MUNICIPALITY_CODE);
CREATE INDEX HIST_TYPE_MODI_BY_AND_DATE_IDX ON ASSET_HISTORY (MODIFIED_DATE, ASSET_TYPE_ID, MODIFIED_BY);



--COPY DATE_PERIOD_VALUE TABLE
CREATE TABLE DATE_PERIOD_VALUE_HISTORY (
    ID NUMBER PRIMARY KEY,
	ASSET_ID NUMBER REFERENCES ASSET_HISTORY (ID) NOT NULL ENABLE,
	PROPERTY_ID NUMBER REFERENCES PROPERTY (ID) NOT NULL ENABLE,
	START_DATE TIMESTAMP (6) NOT NULL ENABLE,
	END_DATE TIMESTAMP (6) NOT NULL ENABLE
);



--COPY ADDITIONAL_PANEL TABLE
CREATE TABLE ADDITIONAL_PANEL_HISTORY (
    ID NUMBER PRIMARY KEY,
	ASSET_ID NUMBER REFERENCES ASSET_HISTORY (ID) NOT NULL ENABLE,
	PROPERTY_ID NUMBER REFERENCES PROPERTY (ID) NOT NULL ENABLE,
	ADDITIONAL_SIGN_TYPE NUMBER,
	ADDITIONAL_SIGN_VALUE VARCHAR2(128),
	ADDITIONAL_SIGN_INFO VARCHAR2(128),
	FORM_POSITION NUMBER,
	ADDITIONAL_SIGN_TEXT VARCHAR2(128),
	ADDITIONAL_SIGN_SIZE NUMBER,
	ADDITIONAL_SIGN_COATING_TYPE NUMBER,
	ADDITIONAL_SIGN_PANEL_COLOR NUMBER,
    CHECK (FORM_POSITION <= 3) ENABLE
);



--COPY VALIDITY_PERIOD_PROPERTY_VALUE TABLE
CREATE TABLE VAL_PERIOD_PROPERTY_VALUE_HIST (
    ID NUMBER PRIMARY KEY,
	ASSET_ID NUMBER REFERENCES ASSET_HISTORY (ID) NOT NULL ENABLE,
	PROPERTY_ID NUMBER REFERENCES PROPERTY (ID) NOT NULL ENABLE,
	TYPE NUMBER(*,0),
	PERIOD_WEEK_DAY NUMBER(*,0) NOT NULL ENABLE,
	START_HOUR NUMBER(*,0) NOT NULL ENABLE,
	END_HOUR NUMBER(*,0) NOT NULL ENABLE,
	START_MINUTE NUMBER(*,0) DEFAULT 0 NOT NULL ENABLE,
	END_MINUTE NUMBER(*,0) DEFAULT 0 NOT NULL ENABLE,
    CONSTRAINT HIST_MINUTE_CONSTRAINT CHECK (START_MINUTE between 0 and 59 and END_MINUTE between 0 and 59) ENABLE
);



--COPY DATE_PROPERTY_VALUE TABLE
CREATE TABLE DATE_PROPERTY_VALUE_HISTORY (
    ID NUMBER PRIMARY KEY,
	ASSET_ID NUMBER REFERENCES ASSET_HISTORY (ID) NOT NULL ENABLE,
	PROPERTY_ID NUMBER REFERENCES PROPERTY (ID) NOT NULL ENABLE,
	DATE_TIME TIMESTAMP (6) NOT NULL ENABLE
);



--COPY SERVICE_POINT_VALUE TABLE
CREATE TABLE SERVICE_POINT_VALUE_HISTORY (
    ID NUMBER PRIMARY KEY,
	ASSET_ID NUMBER REFERENCES ASSET_HISTORY (ID) NOT NULL ENABLE,
	TYPE NUMBER(*,0) NOT NULL ENABLE,
	ADDITIONAL_INFO VARCHAR2(4000),
	PARKING_PLACE_COUNT NUMBER,
	NAME VARCHAR2(128),
	TYPE_EXTENSION NUMBER,
	IS_AUTHORITY_DATA CHAR(1),
	WEIGHT_LIMIT NUMBER,
    CONSTRAINT HIST_IS_AUTHORITY_DATA_BOOLEAN CHECK (IS_AUTHORITY_DATA in ('1','0')) ENABLE
);



--COPY NUMBER_PROPERTY_VALUE TABLE
CREATE TABLE NUMBER_PROPERTY_VALUE_HISTORY (
    ID NUMBER PRIMARY KEY,
	ASSET_ID NUMBER REFERENCES ASSET_HISTORY (ID) NOT NULL ENABLE,
	PROPERTY_ID NUMBER REFERENCES PROPERTY (ID) NOT NULL ENABLE,
	VALUE NUMBER,
	GROUPED_ID NUMBER DEFAULT 0
);

CREATE INDEX HIST_NPV_ASSET_PROP_ID_IDX ON NUMBER_PROPERTY_VALUE_HISTORY (ASSET_ID, PROPERTY_ID);
CREATE INDEX HIST_NUMPROPVAL_PROP_ID_IDX ON NUMBER_PROPERTY_VALUE_HISTORY (PROPERTY_ID);



--COPY MULTIPLE_CHOICE_VALUE TABLE
CREATE TABLE MULTIPLE_CHOICE_VALUE_HISTORY (
    ID NUMBER PRIMARY KEY,
	PROPERTY_ID NUMBER REFERENCES PROPERTY (ID) NOT NULL ENABLE,
	ENUMERATED_VALUE_ID NUMBER REFERENCES ENUMERATED_VALUE (ID) NOT NULL ENABLE,
	ASSET_ID NUMBER REFERENCES ASSET_HISTORY (ID) NOT NULL ENABLE,
	MODIFIED_DATE TIMESTAMP (6),
	MODIFIED_BY VARCHAR2(128),
	GROUPED_ID NUMBER DEFAULT 0
);

CREATE INDEX HIST_MULTIPLE_CHOICE_VALUE_SX ON MULTIPLE_CHOICE_VALUE_HISTORY (ASSET_ID, PROPERTY_ID);



--COPY SINGLE_CHOICE_VALUE TABLE
CREATE TABLE SINGLE_CHOICE_VALUE_HISTORY (
    ASSET_ID NUMBER REFERENCES ASSET_HISTORY (ID) ENABLE,
	ENUMERATED_VALUE_ID NUMBER REFERENCES ENUMERATED_VALUE (ID) NOT NULL ENABLE,
	PROPERTY_ID NUMBER REFERENCES PROPERTY (ID) NOT NULL ENABLE,
	MODIFIED_DATE TIMESTAMP (6),
	MODIFIED_BY VARCHAR2(128),
	GROUPED_ID NUMBER DEFAULT 0,
	CONSTRAINT HIST_SINGLE_CHOICE_PK PRIMARY KEY (ASSET_ID, ENUMERATED_VALUE_ID, GROUPED_ID)
);



--COPY TEXT_PROPERTY_VALUE TABLE
CREATE TABLE TEXT_PROPERTY_VALUE_HISTORY(
    ID NUMBER PRIMARY KEY,
	ASSET_ID NUMBER REFERENCES ASSET_HISTORY (ID) NOT NULL ENABLE,
	PROPERTY_ID NUMBER REFERENCES PROPERTY (ID) NOT NULL ENABLE,
	VALUE_FI VARCHAR2(4000),
	VALUE_SV VARCHAR2(4000),
	CREATED_DATE TIMESTAMP (6) DEFAULT current_timestamp NOT NULL ENABLE,
	CREATED_BY VARCHAR2(128),
	MODIFIED_DATE TIMESTAMP (6),
	MODIFIED_BY VARCHAR2(128),
	GROUPED_ID NUMBER DEFAULT 0
);

CREATE UNIQUE INDEX HIST_AID_PID_TEXT_PROPERTY_SX ON TEXT_PROPERTY_VALUE_HISTORY (ASSET_ID, PROPERTY_ID, GROUPED_ID);



--COPY LRM_POSITION TABLE
CREATE TABLE LRM_POSITION_HISTORY (
    ID NUMBER(38,0),
	LANE_CODE NUMBER(5,0),
	SIDE_CODE NUMBER(5,0),
	START_MEASURE NUMBER(8,3),
	END_MEASURE NUMBER(8,3),
	MML_ID NUMBER(10,0),
	LINK_ID NUMBER(38,0),
	ADJUSTED_TIMESTAMP NUMBER(38,0) DEFAULT 0 NOT NULL ENABLE,
	MODIFIED_DATE TIMESTAMP (6) DEFAULT current_timestamp NOT NULL ENABLE,
	LINK_SOURCE NUMBER(*,0) DEFAULT (1),
    CONSTRAINT HIST_LRM_POSITION_PK PRIMARY KEY (ID),
    CONSTRAINT HIST_START_MEASURE_POSITIVE CHECK (START_MEASURE >= 0) ENABLE
);

CREATE INDEX HIST_LRM_POSITION_LINK_ID_IDX ON LRM_POSITION_HISTORY (LINK_ID);
CREATE INDEX HIST_LRM_POSITION_MML_IDX ON LRM_POSITION_HISTORY (MML_ID);



--COPY ASSET_LINK TABLE
CREATE TABLE ASSET_LINK_HISTORY (
    ASSET_ID NUMBER REFERENCES ASSET_HISTORY (ID) ENABLE,
    POSITION_ID NUMBER(38,0) REFERENCES LRM_POSITION_HISTORY (ID) ENABLE
);

CREATE INDEX HIST_ASSET_ID_IDX ON ASSET_LINK_HISTORY (ASSET_ID);
CREATE INDEX HIST_POSITION_ID_IDX ON ASSET_LINK_HISTORY (POSITION_ID);



--COPY PROHIBITION_VALUE TABLE
CREATE TABLE PROHIBITION_VALUE_HISTORY (
    ID NUMBER PRIMARY KEY,
	ASSET_ID NUMBER REFERENCES ASSET_HISTORY (ID) NOT NULL ENABLE,
	TYPE NUMBER(*,0) NOT NULL ENABLE,
	ADDITIONAL_INFO VARCHAR2(4000)
);

CREATE INDEX HIST_PROH_VALUE_ASSET_IDX ON PROHIBITION_VALUE_HISTORY (ASSET_ID);



--COPY PROHIBITION_EXCEPTION TABLE
CREATE TABLE PROHIBITION_EXCEPTION_HISTORY (
    ID NUMBER PRIMARY KEY,
	PROHIBITION_VALUE_ID NUMBER REFERENCES PROHIBITION_VALUE_HISTORY (ID) NOT NULL ENABLE,
	TYPE NUMBER(*,0) NOT NULL ENABLE
);

CREATE INDEX HIST_PROH_EXCEPT_IDX ON PROHIBITION_EXCEPTION_HISTORY (PROHIBITION_VALUE_ID);



--COPY PROHIBITION_VALIDITY_PERIOD TABLE
CREATE TABLE PROH_VAL_PERIOD_HISTORY (
    ID NUMBER PRIMARY KEY,
	PROHIBITION_VALUE_ID NUMBER REFERENCES PROHIBITION_VALUE_HISTORY (ID) NOT NULL ENABLE,
	TYPE NUMBER(*,0) NOT NULL ENABLE,
	START_HOUR NUMBER(*,0) NOT NULL ENABLE,
	END_HOUR NUMBER(*,0) NOT NULL ENABLE,
	START_MINUTE NUMBER(*,0) DEFAULT 0 NOT NULL ENABLE,
	END_MINUTE NUMBER(*,0) DEFAULT 0 NOT NULL ENABLE,
    CONSTRAINT HIST_TYPE_CONSTRAINT CHECK (TYPE between 1 and 3) ENABLE,
    CONSTRAINT HIST_HOUR_CONSTRAINT CHECK (START_HOUR between 0 and 24 and END_HOUR between 0 and 24) ENABLE
);

CREATE INDEX HIST_PROH_VAL_PERIOD_IDX ON PROH_VAL_PERIOD_HISTORY (PROHIBITION_VALUE_ID);
